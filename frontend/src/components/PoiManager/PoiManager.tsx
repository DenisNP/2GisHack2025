import React, { useEffect, useRef, useState } from 'react';
import { useMapglContext } from '../../MapglContext';
import { useUnit } from 'effector-react';
import { stores, events } from './models';
import { Poi, PoiType } from '../../types/Poi';
import './PoiManager.css';

// –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ POI
const POI_COLORS = {
    [PoiType.High]: '#FF0000',    // –∫—Ä–∞—Å–Ω—ã–π
    [PoiType.Medium]: '#FFA500',  // –æ—Ä–∞–Ω–∂–µ–≤—ã–π
    [PoiType.Low]: '#FFFF00',     // –∂–µ–ª—Ç—ã–π
};

// –†–∞–∑–º–µ—Ä—ã –º–∞—Ä–∫–µ—Ä–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ (–¥–ª—è anchor)
const POI_SIZES = {
    [PoiType.High]: 20,
    [PoiType.Medium]: 16,
    [PoiType.Low]: 12,
};

// CSS –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –º–∞—Ä–∫–µ—Ä–æ–≤
const POI_MARKER_CLASSES = {
    [PoiType.High]: 'poi-marker poi-marker-high',
    [PoiType.Medium]: 'poi-marker poi-marker-medium',
    [PoiType.Low]: 'poi-marker poi-marker-low',
};

export function PoiManager() {
    const { mapglInstance, mapgl } = useMapglContext();
    const store = useUnit(stores.$store);
    
    // –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è POI
    const [addingMode, setAddingMode] = useState<PoiType | null>(null);
    
    // –•—Ä–∞–Ω–∏–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ä—ã POI
    const markersRef = useRef<Array<{ id: number; marker: any }>>([]);
    console.log(store);

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Å—Ç–æ—Ä–∞
    useEffect(() => {
        if (!mapglInstance || !mapgl) return;
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ä–∫–µ—Ä—ã
        markersRef.current.forEach((entry) => {
            try {
                entry.marker && entry.marker.destroy();
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–∞—Ä–∫–µ—Ä–∞:', e);
            }
        });
        markersRef.current = [];
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –º–∞—Ä–∫–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ POI
        store.poi.forEach((poi: Poi) => {
            try {
                const size = POI_SIZES[poi.type] || POI_SIZES[PoiType.Low];
                const markerClass = POI_MARKER_CLASSES[poi.type] || POI_MARKER_CLASSES[PoiType.Low];
                
                // –°–æ–∑–¥–∞–µ–º HTML —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞
                const html = document.createElement('div');
                html.className = markerClass;
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è POI –ø—Ä–∏ –∫–ª–∏–∫–µ
                html.addEventListener('click', (e) => {
                    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è –∫ –∫–∞—Ä—Ç–µ
                    events.removePoiById(poi.id);
                });
                
                // –°–æ–∑–¥–∞–µ–º –º–∞—Ä–∫–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–µ
                const marker = new (mapgl as any).HtmlMarker(mapglInstance, {
                    coordinates: [poi.geoPoint.lng, poi.geoPoint.lat],
                    html,
                    anchor: [size / 2, size / 2],
                    interactive: true,
                    zIndex: 1000,
                });
                
                markersRef.current.push({ id: poi.id, marker });
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∞—Ä–∫–µ—Ä–∞ POI:', e);
            }
        });
    }, [store.poi, mapglInstance, mapgl]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è POI
    useEffect(() => {
        if (!mapglInstance || !mapgl || !addingMode) return;
        
        const onMapClick = (e: any) => {
            const lngLat: number[] = e.lngLat;
            if (!Array.isArray(lngLat) || lngLat.length < 2) return;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π POI
            events.addPoi({
                geoPoint: { lng: lngLat[0], lat: lngLat[1] },
                type: addingMode,
            });
            
            // –û—Ç–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
            setAddingMode(null);
        };
        
        mapglInstance.on('click', onMapClick);
        
        return () => {
            try {
                mapglInstance.off('click', onMapClick);
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–∞:', e);
            }
        };
    }, [mapglInstance, mapgl, addingMode]);
    
    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    useEffect(() => {
        return () => {
            markersRef.current.forEach((entry) => {
                try {
                    entry.marker && entry.marker.destroy();
                } catch (e) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –º–∞—Ä–∫–µ—Ä–∞:', e);
                }
            });
            markersRef.current = [];
        };
    }, []);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    const toggleAddingMode = (type: PoiType) => {
        if (addingMode === type) {
            // –û—Ç–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É
            setAddingMode(null);
        } else {
            // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            setAddingMode(type);
        }
    };
    
    const boxStyle: React.CSSProperties = {
        position: 'absolute',
        right: 12,
        top: 12,
        zIndex: 1000,
        background: 'white',
        padding: 8,
        borderRadius: 6,
        display: 'flex',
        flexDirection: 'column',
        gap: 8,
    };
    
    const buttonStyle = (type: PoiType): React.CSSProperties => ({
        padding: '8px 16px',
        border: '2px solid',
        borderColor: addingMode === type ? POI_COLORS[type] : '#ccc',
        borderRadius: 4,
        background: addingMode === type ? POI_COLORS[type] : 'white',
        color: addingMode === type ? 'white' : '#333',
        cursor: 'pointer',
        fontWeight: addingMode === type ? 'bold' : 'normal',
    });
    
    return (
        <div style={boxStyle}>
            <div style={{ fontWeight: 600, marginBottom: 4 }}>–î–æ–±–∞–≤–∏—Ç—å POI</div>
            <button
                onClick={() => toggleAddingMode(PoiType.High)}
                style={buttonStyle(PoiType.High)}
            >
                –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            </button>
            <button
                onClick={() => toggleAddingMode(PoiType.Medium)}
                style={buttonStyle(PoiType.Medium)}
            >
                –°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            </button>
            <button
                onClick={() => toggleAddingMode(PoiType.Low)}
                style={buttonStyle(PoiType.Low)}
            >
                –ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            </button>
            {addingMode && (
                <div style={{ fontSize: 12, color: '#666', marginTop: 4 }}>
                    üí° –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ—á–∫–∏
                </div>
            )}
        </div>
    );
}